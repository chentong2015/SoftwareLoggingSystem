<?xml version="1.0" encoding="UTF-8"?>

<!-- Log4j提供的默认配置 default configuration
     1. A ConsoleAppender attached to the root logger
     2. A PatternLayout set to the pattern
     3. Log4j assigns the root logger to Level.ERROR -->
<Configuration status="WARN">

    <Properties>
        <!-- 自定义配置文件中使用的属性变量 -->
        <Property name="filename">target/test.log</Property>
    </Properties>

    <Appenders>
        <!-- 提供输出的方向是Console;输出的信息格式自定义 -->
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>

        <!-- TODO: 设置log文件log，如果不存在则会创建文件 => 获取指定的日志文件，进行输出 -->
        <File name="FileName" fileName="${filename}">
            <PatternLayout>
                <pattern>%d %p %C{1.} [%t] %m%n</pattern>
            </PatternLayout>
        </File>
        <!-- <File name="File" fileName="output.log" bufferedIO="false"
              advertiseURI="file://output.log" advertise="true">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </File> -->
    </Appenders>

    <Loggers>
        <!-- 针对不同类型使用不同的Logger级别, 使用特定的日志输出配置 -->
        <!-- 设置additivity="false", 不向上继承父级(比如root)配置appender
             避免继承全局日志配置, 防止重复输出 -->
        <Logger name="com.log4j.main.BaseLog4jInjection" level="INFO" additivity="false">
            <!-- 指定不同的Appender的引用名称，输出到指定的位置 -->
            <AppenderRef ref="File"/>
        </Logger>

        <!-- 优先级最低: 如果没有找到与某个类或包名称匹配的<logger>，使用这个<root>设置 -->
        <Root level="ERROR">
            <AppenderRef ref="Console"/>
        </Root>
    </Loggers>
</Configuration>
